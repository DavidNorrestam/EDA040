package todo;

import se.lth.cs.realtime.semaphore.Semaphore;
import done.ClockInput;
import done.ClockOutput;

public class TimeUpdater extends Thread {
	private AlarmClock alarmClock;
	private ClockInput input;
	private ClockOutput output;
	private Semaphore sem; 
	private long startTime;
	
	public TimeUpdater(AlarmClock alarmClock, ClockInput input, ClockOutput output) {
		this.alarmClock = alarmClock;
		this.input = input;
		this.output = output;
		this.sem = input.getSemaphoreInstance(); 
		startTime = System.currentTimeMillis();
	}
	
	public void run() {
		// Run while interrupt has not been requested.
		while(!isInterrupted()) {
			// Every second, call show time with the correct updated time
			S
			long timeDiff;
			
			
			// If alarm is turned on, check if it's time to beep.
			
		}
	}
}
